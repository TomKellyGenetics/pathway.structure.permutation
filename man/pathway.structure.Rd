% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathway.structure.R
\name{Tests of Pathway Structure in iGraph}
\alias{Tests of Pathway Structure in iGraph}
\alias{matrix.structure}
\alias{permutation.structure}
\alias{test.structure}
\title{Extensions to iGraph for Pathway Structure}
\usage{
test.structure(graph, target_node, source_node, shortest.paths.in = NULL)

matrix.structure(graph, target_vec, source_vec,
  pathway_structure_nodes = NULL, shortest.paths.in = NULL)

permutation.structure(graph, target, source, universe,
  shortest.paths.in = NULL, reps = 1000)
}
\arguments{
\item{graph}{An \code{\link[igraph]{igraph}} object. May be directed or weighted as long as a shortest path can be computed.}

\item{shortest.paths.in}{Defaults to NULL leading to computing the shortest paths from the input graph where necessary, these may be given as computed in advance (or passed from higher functions) to reduce computational redundancy.}

\item{target}{string: vector of target states for testing pathway structure. Must be a single string for target_node. These are cross referenced against V(graph)$name.}

\item{source}{string: vector of source states for testing pathway structure. Must be a single string for source_node. These are cross referenced against V(graph)$name.}

\item{universe}{string vector of potential nodes to be assigned target and\/or source states. This may be V(graph)$name, and subset thereof, or a larger pool of nodes to assign states for permutation analysis.}

\item{reps}{scalar numeric. Number of permutations to statistically test the structure of the network.}
}
\description{
Functions to compute the pathway structure of different states within a network with testing pathway structure with permutation analysis. Uses shortest paths to compute the structure between nodes of differing states. Shortest paths are computed in advance where possible to reduce computational redundancy.
}
\examples{

#generate example graphs
library("igraph")
g1 <- make_ring(10)
V(g1)$name <- letters[1:10]
g2 <- make_star(10)
V(g2)$name <- letters[1:10]

#test pathway structure between two points
test.structure(g1, "a", "c")
test.structure(g2, "a", "c")

#test pathway structure between two vectors of points
matrix.structure(g1, letters[1:5], letters[5:7])
matrix.structure(g2, letters[1:5], letters[5:7])

#test pathway structure between two vectors of points with permutations
permutation.structure(g1, letters[1:5], letters[5:7], letters)
permutation.structure(g2, letters[1:5], letters[5:7], letters)
}

